import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { Alert, AlertDescription } from '@/components/ui/alert';
import Icon from '@/components/ui/icon';

interface StepData {
  id: number;
  title: string;
  content: string;
  warning?: string;
  isCompleted: boolean;
}

const Index = () => {
  const [currentStep, setCurrentStep] = useState(1);
  const [credentials, setCredentials] = useState({ login: '', password: '' });
  const [completedSteps, setCompletedSteps] = useState<number[]>([]);
  const [hasCredentials, setHasCredentials] = useState(false);

  // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è –∏–∑ URL
  useEffect(() => {
    const urlParams = new URLSearchParams(window.location.search);
    const login = urlParams.get('login') || '';
    const password = urlParams.get('password') || '';
    setCredentials({ login, password });
    setHasCredentials(Boolean(login && password));
  }, []);

  const steps: StepData[] = [
    {
      id: 1,
      title: "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è",
      content: "–°–¢–†–û–ì–û –ó–ê–ü–†–ï–©–ï–ù–û –í–•–û–î–ò–¢–¨ –í –ü–†–û–§–ò–õ–¨ –°–û –°–ú–ê–†–¢–§–û–ù–ê –ò–õ–ò –ü–ö! –ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –≤—Ö–æ–¥–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–Ω–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ –≤—ã–¥–∞—á–µ –±—É–¥–µ—Ç –æ—Ç–∫–∞–∑–∞–Ω–æ, –±–µ–∑ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤.",
      warning: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç",
      isCompleted: completedSteps.includes(1)
    },
    {
      id: 2,
      title: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
      content: "–ù–∞ –∫–æ–Ω—Å–æ–ª–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ ‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Üí –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Üí –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±—ã–µ –∞–≤–∞—Ç–∞—Ä–∫—É –∏ –Ω–∏–∫, –Ω–∞–∂–º–∏—Ç–µ –û–ö.",
      isCompleted: completedSteps.includes(2)
    },
    {
      id: 3,
      title: "–í—Ö–æ–¥",
      content: `–ù–∞–∂–º–∏—Ç–µ "–í–æ–π—Ç–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤—è–∑—å". –ö–æ–≥–¥–∞ –ø–æ—è–≤–∏—Ç—Å—è QR, –≤—ã–±–µ—Ä–∏—Ç–µ "–î—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± –¥–ª—è –≤—Ö–æ–¥–∞". –í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω: ${credentials.login || '[–±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω –≤ URL]'} –∏ –ø–∞—Ä–æ–ª—å: ${credentials.password || '[–±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω –≤ URL]'}`,
      isCompleted: completedSteps.includes(3)
    },
    {
      id: 4,
      title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
      content: "–£—Ç–æ—á–Ω–∏—Ç–µ —É –ø—Ä–æ–¥–∞–≤—Ü–∞ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏ –±—ã—Å—Ç—Ä–æ –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ. –ù–∞–∂–º–∏—Ç–µ –î–∞–ª–µ–µ ‚Üí –°–≤—è–∑–∞—Ç—å ‚Üí –û–ö. –í —Ä–∞–∑–¥–µ–ª–µ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–Ω–ª–∞–π–Ω-–ª–∏—Ü–µ–Ω–∑–∏–∏ –≤ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –í–ö–õ.",
      isCompleted: completedSteps.includes(4)
    },
    {
      id: 5,
      title: "–ó–∞–≥—Ä—É–∑–∫–∞",
      content: "–í–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ üè† –î–æ–º–∞—à–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É. –û—Ç–∫—Ä–æ–π—Ç–µ –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –∏–≥—Ä–æ–≤—ã–µ –∫–∞—Ä—Ç—ã ‚Üí –≤—ã–±–µ—Ä–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Üí –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–≥—Ä—É ‚Üí –ü–∞—Ä–∞–º–µ—Ç—Ä—ã ‚Üí –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.",
      isCompleted: completedSteps.includes(5)
    },
    {
      id: 6,
      title: "–ü–∞–º—è—Ç–∫–∞",
      content: "–ò–≥—Ä—ã –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º. –°–†–ê–ó–£ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã –≤–∫–ª—é—á–∞–π—Ç–µ —Ä–µ–∂–∏–º –ø–æ–ª—ë—Ç–∞! –ù–µ –º–µ–Ω—è–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è. –ù–µ—Å–æ–±–ª—é–¥–µ–Ω–∏–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —Å–ª—ë—Ç—É –∞–∫–∫–∞—É–Ω—Ç–∞.",
      warning: "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–π—Ç–µ —Ä–µ–∂–∏–º –ø–æ–ª—ë—Ç–∞ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã",
      isCompleted: completedSteps.includes(6)
    }
  ];

  const toggleStepCompletion = (stepId: number) => {
    setCompletedSteps(prev => 
      prev.includes(stepId) 
        ? prev.filter(id => id !== stepId)
        : [...prev, stepId]
    );
  };

  // –ü—Ä–æ–≥—Ä–µ—Å—Å –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ —Ç–µ–∫—É—â–µ–º —à–∞–≥–µ
  const progress = (currentStep / steps.length) * 100;

  const nextStep = () => {
    if (currentStep < steps.length) {
      setCurrentStep(currentStep + 1);
    }
  };

  const prevStep = () => {
    if (currentStep > 1) {
      setCurrentStep(currentStep - 1);
    }
  };

  // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ URL, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
  if (!hasCredentials) {
    return (
      <div className="min-h-screen bg-gray-900 flex items-center justify-center">
        <Card className="max-w-md w-full mx-4 bg-gray-800 border-gray-700">
          <CardHeader className="text-center">
            <img 
              src="https://cdn.poehali.dev/files/1f2f71c9-9139-41ea-b95a-6f66419d9cc0.png" 
              alt="–°—É–Ω–¥—É–∫" 
              className="w-16 h-16 object-contain mx-auto mb-4 rounded-xl"
            />
            <CardTitle className="text-2xl text-white">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <p className="text-gray-300 text-center">
              –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–¥–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç —á–µ—Ä–µ–∑ URL.
            </p>
            <Alert className="bg-blue-900 border-blue-700">
              <Icon name="Info" size={16} className="text-blue-400" />
              <AlertDescription className="text-blue-200">
                <strong>–ö–∞–∫ –ø–µ—Ä–µ–¥–∞—Ç—å –¥–∞–Ω–Ω—ã–µ:</strong><br/>
                –î–æ–±–∞–≤—å—Ç–µ –∫ URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:<br/>
                <code className="text-sm bg-gray-700 text-gray-200 px-2 py-1 rounded">
                  ?login=–≤–∞—à_–ª–æ–≥–∏–Ω&password=–≤–∞—à_–ø–∞—Ä–æ–ª—å
                </code>
              </AlertDescription>
            </Alert>
            <div className="bg-amber-900 p-4 rounded-lg border border-amber-700">
              <h4 className="font-medium text-amber-200 mb-2">–ü—Ä–∏–º–µ—Ä —Å—Å—ã–ª–∫–∏:</h4>
              <code className="text-xs bg-gray-700 text-gray-200 p-2 rounded block border border-gray-600 break-all">
                {window.location.origin}?login=example@email.com&password=mypassword123
              </code>
            </div>
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-900">
      {/* Header */}
      <div className="bg-gray-800 shadow-sm border-b border-gray-700">
        <div className="max-w-4xl mx-auto px-6 py-4">
          <div className="flex items-center gap-4">
            <img 
              src="https://cdn.poehali.dev/files/d999ba6f-46bf-441b-811e-ff477b47f708.png" 
              alt="–°—É–Ω–¥—É–∫" 
              className="w-12 h-12 object-contain rounded-lg"
            />
            <div>
              <h1 className="text-2xl font-bold text-white">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏</h1>
              <p className="text-gray-300">–ú–∞–≥–∞–∑–∏–Ω –∏–≥—Ä–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ "–°—É–Ω–¥—É–∫"</p>
            </div>
          </div>
          
          <div className="mt-6">
            <div className="flex justify-between items-center mb-2">
              <span className="text-sm font-medium text-gray-300">–ü—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</span>
              <span className="text-sm text-gray-400">–®–∞–≥ {currentStep} –∏–∑ {steps.length}</span>
            </div>
            <Progress value={progress} className="h-2" />
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="max-w-4xl mx-auto px-6 py-8">

        {/* Navigation Cards */}
        <div className="grid grid-cols-2 gap-4 mb-8">
          <Card className="bg-gray-800 border-gray-600 hover:border-gray-500 transition-colors">
            <Button
              variant="ghost"
              onClick={prevStep}
              disabled={currentStep === 1}
              className="w-full h-full p-6 text-white hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed"
            >
              <div className="flex items-center justify-center gap-3">
                <Icon name="ChevronLeft" size={20} />
                <span className="font-medium">–ù–∞–∑–∞–¥</span>
              </div>
            </Button>
          </Card>
          
          <Card className="bg-gray-800 border-gray-600 hover:border-amber-500 transition-colors">
            <Button
              variant="ghost"
              onClick={nextStep}
              disabled={currentStep === steps.length}
              className="w-full h-full p-6 text-white hover:bg-amber-900 disabled:opacity-50 disabled:cursor-not-allowed"
            >
              <div className="flex items-center justify-center gap-3">
                <span className="font-medium">–í–ø–µ—Ä–µ–¥</span>
                <Icon name="ChevronRight" size={20} />
              </div>
            </Button>
          </Card>
        </div>

        {/* Current Step Content */}
        <div>
          <Card className="animate-fade-in bg-gray-800 border-gray-700 min-h-[400px] flex flex-col">
            <CardHeader>
              <CardTitle className="text-2xl text-white">
                –®–∞–≥ {currentStep}: {steps.find(s => s.id === currentStep)?.title}
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-6 flex-1 flex flex-col">
              {steps.find(s => s.id === currentStep)?.warning && (
                <Alert className="border-red-700 bg-red-900">
                  <Icon name="AlertTriangle" size={16} className="text-red-400" />
                  <AlertDescription className="text-red-200">
                    {steps.find(s => s.id === currentStep)?.warning}
                  </AlertDescription>
                </Alert>
              )}
              
              <div className="prose max-w-none flex-1">
                <p className="text-gray-200 leading-relaxed text-lg">
                  {steps.find(s => s.id === currentStep)?.content}
                </p>
              </div>

              {/* Credentials Display */}
              {currentStep === 3 && (credentials.login && credentials.password) && (
                <Card className="bg-amber-900 border-amber-700">
                    <CardContent className="pt-6">
                      <h4 className="font-medium mb-4 text-amber-200 text-lg">–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:</h4>
                      <div className="space-y-3">
                        <div className="flex flex-col gap-2">
                          <span className="font-medium text-amber-300 text-sm">–õ–æ–≥–∏–Ω:</span>
                          <code className="bg-gray-700 text-gray-200 px-3 py-2 rounded text-base border border-gray-600 font-mono break-all">{credentials.login}</code>
                        </div>
                        <div className="flex flex-col gap-2">
                          <span className="font-medium text-amber-300 text-sm">–ü–∞—Ä–æ–ª—å:</span>
                          <code className="bg-gray-700 text-gray-200 px-3 py-2 rounded text-base border border-gray-600 font-mono break-all">{credentials.password}</code>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                )}


            </CardContent>
          </Card>
        </div>
      </div>

      {/* Fixed Support Button */}
      <div className="fixed bottom-6 left-1/2 transform -translate-x-1/2 z-50">
        <Button
          asChild
          className="bg-blue-600 hover:bg-blue-700 text-white shadow-lg px-6 py-3 rounded-full"
        >
          <a
            href="https://t.me/lahtion0v"
            target="_blank"
            rel="noopener noreferrer"
            className="flex items-center gap-2"
          >
            <Icon name="MessageCircle" size={18} />
            –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ –¢–ì
          </a>
        </Button>
      </div>
    </div>
  );
};

export default Index;